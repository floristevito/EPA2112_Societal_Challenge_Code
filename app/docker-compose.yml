version: '3'

services:
    server:
        build: './server'
        expose:
            - ${APP_SERVER_PORT}
        environment: 
            API_HOST: ${API_HOST}
            APP_SERVER_PORT: ${APP_SERVER_PORT}
        ports:
            - ${APP_SERVER_PORT}:${APP_SERVER_PORT}
        volumes:
            - ./server/src:/srv/app/qr/src
        command: python manage.py runserver 0.0.0.0:8000
    
    client:
        build: './client'
        expose:
            - ${VUE_APP_PORT}
        environment: 
            AVUE_APP_PORT: ${VUE_APP_PORT}
        ports:
            - ${VUE_APP_PORT}:${VUE_APP_PORT}
        volumes:
            - ./client/src:/srv/app/qr/src
            - ./client/public:/srv/app/qr/public
        links:
            - server
        environment:
            - CHOKIDAR_USEPOLLING=true
        command: npm run production

    # nginx:
    #     image: nginx:1.13
    #     build: './nginx'
    #     ports:
    #         - 80:80
    #     networks:
    #         - nginx_network
    #     volumes:
    #         - ./data/certbot/conf:/etc/letsencrypt/
    #         - ./data/certbot/www:/var/www/certbot/
        # command:
        #     - "/bin/sh -c 'while :; do sleep 6h & wait $${!}; nginx -s reload; done & nginx -g \"daemon off;\"'"

#     certbot:
#         image: certbot/certbot
#         entrypoint: "/bin/sh -c 'trap exit TERM; while :; do certbot renew; sleep 12h & wait $${!}; done;'"

# networks:  
#   nginx_network:
#     driver: bridge